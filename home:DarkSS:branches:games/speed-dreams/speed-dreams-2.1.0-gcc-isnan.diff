--- src/libs/learning/policy.cpp.orig	2014-06-18 17:20:36.000000000 +0300
+++ src/libs/learning/policy.cpp	2016-06-23 21:36:12.000441840 +0300
@@ -436,7 +436,7 @@
 					// if P[][] remains unchanged between updates.
 					// -- removed because it doesn't work! --
 					//P[i][j] += 0.01*delta * e[i][j] * (1.-P[i][j]);
-					if ((fabs (Q[i][j])>1000.0)||(isnan(Q[i][j]))) {
+					if ((fabs (Q[i][j])>1000.0)||(std::isnan(Q[i][j]))) {
 						printf ("u: %d %d %f %f\n", i,j,Q[i][j], ad * e[i][j]);
 					}
 					
@@ -522,7 +522,7 @@
 		if( readSize < (int unsigned)n_actions )
 			fprintf(stderr, "Error when reading file");
 		for (j=0; j<n_actions; j++) {
-			if ((fabs (Q[i][j])>100.0)||(isnan(Q[i][j]))) {
+			if ((fabs (Q[i][j])>100.0)||(std::isnan(Q[i][j]))) {
 				printf ("l: %d %d %f\n", i,j,Q[i][j]);
 				Q[i][j] = 0.0;
 			}
@@ -585,7 +585,7 @@
 		if( writeSize < (int unsigned)n_actions)
 			fprintf( stderr, "Failed to write all data to file %s\n", f);
 		for (int j=0; j<n_actions; j++) {
-			if ((fabs (Q[i][j])>100.0)||(isnan(Q[i][j]))) {
+			if ((fabs (Q[i][j])>100.0)||(std::isnan(Q[i][j]))) {
 				printf ("s: %d %d %f\n", i,j,Q[i][j]);
 			}
 		}
